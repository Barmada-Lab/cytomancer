[project]
name = "cytomancer"
version = "1.3.15"
description= "Tools for cellular divination"
readme = "README.md"
requires-python = ">=3.11,<3.12"
dependencies = [
    "pydantic>=2.3.0",
    "pydantic-settings>=2.2.1",
    "python-dotenv>=1.0.0",
    "toolz>=0.12.0",
    "trogon>=0.5.0",
    "click>=8.1.7",
    "tqdm>=4.64.1",
    "cftime>=1.6.2",
    "lxml>=4.9.3",
    "numpy<2.0.0",
    "scikit-image>=0.19.3",
    "scikit-learn==1.4.0",
    "matplotlib>=3.5.1",
    "tifffile>=2023.7.18",
    "nd2>=0.10.0",
    "ome-types>=0.5.0",
    "Pillow>=10.1.0",
    "xarray>=2023.9.0",
    "dask==2024.5.1",
    "distributed==2024.5.1",
    "dask-image>=2023.8.1",
    "bokeh>=3.3.0",
    "bottleneck>=1.3.7",
    "pystackreg>=0.2.6",
    "largestinteriorrectangle>=0.2.0",
    "cvat-sdk==2.17.0",
    "pyarrow>=15.0.0",
    "hdaf-filter>=0.1.1",
    "h5py>=3.10.0",
    "textual>=0.53.0", # explicit dependency to avoid trogon incompatibility with 0.54.0
    "more-itertools>=10.2.0",
    "celery>=5.4.0",
    "redis>=5.0.4",
    "pygithub>=2.3.0",
    "stardist==0.8.5",
    "fiftyone>=0.25.2",
    "tensorflow==2.15.1",
    "zarr>=2.18.2",
    "scipy>=1.14.0",
    "lifelines>=0.29.0",
    "dask-cuda>=24.6.0",
    "imagecodecs>=2024.6.1",
    "pycocotools>=2.0.8"
]

[project.scripts]
cyto = "cytomancer.cli:cli"

[tool.uv]
dev-dependencies = [
    "pytest<8.0.0,>=7.4.3",
    "mypy<2.0.0,>=1.8.0",
    "ruff<1.0.0,>=0.2.2",
    "pre-commit<4.0.0,>=3.6.2",
    "types-passlib<2.0.0.0,>=1.7.7.20240106",
    "coverage<8.0.0,>=7.4.3",
    "ipython>=8.28.0",
    "ipykernel>=6.29.5",
    "ipympl>=0.9.4",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["cytomancer"]

[tool.mypy]
strict = true
exclude = ["venv", ".venv"]

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
